version: '3'
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: dnginx
    ports:
      - '${NGINX_HTTP_HOST_PORT}:80'
      - '${NGINX_HTTPS_HOST_PORT}:443'
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    links:
      - php74:php-fpm
    networks:
      - default

#  php73:
#    container_name: dphp73
#    build:
#      context: .
#      args:
#        PHP_VERSION: ${PHP73_VERSION}
#        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
#        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
#        MORE_EXTENSION_INSTALLER: php73.sh
#    volumes:
#      - ${SOURCE_DIR}:/var/www/html/:rw
#      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP73_LOG_DIR}:/var/log/php
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

  php74:
    container_name: dphp74
    build:
      context: .
      args:
        PHP_VERSION: ${PHP_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php74.sh
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default
    environment:
      TZ: "Asia/Shanghai"

  mysql:
    container_name: dmysql
    image: mysql:${MYSQL_VERSION}
    ports:
      - '${MYSQL_HOST_PORT}:3306'
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    networks:
      default:
        ipv4_address: 172.24.0.201
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'

#  postgres:
#    image: postgres:${POSTGRES_VERSION}
#    container_name: dpostgres
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      PGDATA: /var/lib/postgresql/data/data/
#    ports:
#      - '${POSTGRES_HOST_PORT}:5432'
#    volumes:
#      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data:rw
#    networks:
#      default:
#        ipv4_address: 172.24.0.203

  redis:
    container_name: dredis
    image: redis:${REDIS_VERSION}
    ports:
      - '${REDIS_HOST_PORT}:6379'
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ['redis-server', '/etc/redis.conf']
    networks:
      default:
        ipv4_address: 172.24.0.202

  phpmyadmin:
    container_name: dphpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - '${PHPMYADMIN_HOST_PORT}:80'
    restart: always
    networks:
      - default
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306

#  hyperf:
#    image: hyperf/hyperf:${HYPERF_VERSION}
#    container_name: dhyperf
#    restart: always
#    ports:
#      - '${HYPERF_HOST_PORT}:9501'
#    volumes:
#      - ${HYPERF_WORK_DIR}:/hyperf-skeleton/:rw
#    tty: true
#    networks:
#      - default

#  golang:
#    container_name: dgolang
#    build: ./golang
#    ports:
#      - '${GOLANG_HOST_PORT}:8088'
#    volumes:
#      - ${GOLANG_WORK_DIR}:/app/go-work:rw
#    restart: always
#    networks:
#      - default

#  rabbitmq:
#    build:
#      context: ./build/rabbit
#      args:
#        RABBITMQ_VERSION: ${RABBITMQ_VERSION}
#    container_name: drabbitmq
#    restart: always
#    ports:
#      - '${RABBITMQ_HOST_PORT}:15672'
#    tty: true
#    networks:
#      - default

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16
